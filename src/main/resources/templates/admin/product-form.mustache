<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{#product}}Edit{{/product}}{{^product}}Create{{/product}} Product - Collectibles Store</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            overflow: hidden;
        }
        
        header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        header h1 {
            font-size: 24px;
            font-weight: 600;
        }
        
        nav {
            display: flex;
            gap: 20px;
        }
        
        nav a {
            color: white;
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 5px;
            transition: background-color 0.3s;
        }
        
        nav a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        
        main {
            padding: 30px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }
        
        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }
        
        .form-group textarea {
            resize: vertical;
        }
        
        .form-group small {
            color: #6c757d;
            font-size: 12px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .btn {
            display: inline-block;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s;
            margin-right: 10px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .btn-danger {
            background: #dc3545;
            color: white;
        }
        
        .btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        table th {
            background: #f8f9fa;
            padding: 12px;
            text-align: left;
            border-bottom: 2px solid #ddd;
        }
        
        table td {
            padding: 12px;
            border-bottom: 1px solid #ddd;
        }
        
        .alert {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        
        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        footer {
            background: #f8f9fa;
            padding: 20px 30px;
            text-align: center;
            color: #6c757d;
            border-top: 1px solid #dee2e6;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üè∫ Collectibles Store</h1>
            <nav>
                <a href="/">Home</a>
                <a href="/products">Browse Products</a>
                <a href="/admin/products">Manage Products</a>
                <a href="/api/docs">API Docs</a>
            </nav>
        </header>
        
        <main>
            {{#errorMessage}}
            <div class="alert alert-error">{{errorMessage}}</div>
            {{/errorMessage}}
            
            {{#successMessage}}
            <div class="alert alert-success">{{successMessage}}</div>
            {{/successMessage}}
            
            <h2>{{#product}}Edit Product{{/product}}{{^product}}Create New Product{{/product}}</h2>
            
            <form id="productForm" style="max-width: 600px; margin-top: 20px;">
                {{#product}}
                <div class="form-group">
                    <label>Product ID</label>
                    <input type="text" value="{{product.id}}" readonly style="background: #f0f0f0; color: #6c757d;">
                    <small>ID is automatically generated and cannot be changed</small>
                </div>
                {{/product}}
                
                <div class="form-group">
                    <label for="name">Product Name *</label>
                    <input type="text" id="name" name="name" value="{{#product}}{{product.name}}{{/product}}" required>
                </div>
                
                <div class="form-group">
                    <label for="description">Description *</label>
                    <textarea id="description" name="description" required rows="4">{{#product}}{{product.description}}{{/product}}</textarea>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="price">Price *</label>
                        <input type="number" id="price" name="price" 
                               value="{{#product}}{{product.price}}{{/product}}" 
                               step="0.01" min="0.01" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="currency">Currency *</label>
                        <select id="currency" name="currency" required>
                            <option value="USD" {{#product}}{{#product.currencyUSD}}selected{{/product.currencyUSD}}{{/product}}>USD</option>
                            <option value="EUR" {{#product}}{{#product.currencyEUR}}selected{{/product.currencyEUR}}{{/product}}>EUR</option>
                            <option value="GBP" {{#product}}{{#product.currencyGBP}}selected{{/product.currencyGBP}}{{/product}}>GBP</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="category">Category</label>
                    <input type="text" id="category" name="category" 
                           value="{{#product}}{{product.category}}{{/product}}"
                           placeholder="e.g., Autographed Items, Musical Instruments">
                </div>
                
                <div style="margin-top: 30px;">
                    <button type="submit" class="btn btn-primary">{{#product}}Update Product{{/product}}{{^product}}Create Product{{/product}}</button>
                    <a href="/admin/products" class="btn btn-secondary">Cancel</a>
                    {{#product}}
                    <button type="button" class="btn btn-danger" onclick="deleteProduct('{{product.id}}')">Delete</button>
                    {{/product}}
                </div>
            </form>
            
            <div style="margin-top: 40px;">
                <h3>All Products</h3>
                <div style="margin-bottom: 15px;">
                    <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 15px;">
                        <input type="text" id="tableSearch" placeholder="Search by name or ID..." 
                               style="padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                        <select id="tableCategoryFilter" style="padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                            <option value="">All Categories</option>
                            {{#allProducts}}
                            {{#category}}
                            <option value="{{category}}">{{category}}</option>
                            {{/category}}
                            {{/allProducts}}
                        </select>
                    </div>
                </div>
                <div style="overflow-x: auto;">
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Category</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="productsTableBody">
                            {{#allProducts}}
                            <tr data-name="{{name}}" data-id="{{id}}" data-category="{{category}}">
                                <td>{{id}}</td>
                                <td>{{name}}</td>
                                <td>${{price}} {{currency}}</td>
                                <td>{{#category}}{{category}}{{/category}}{{^category}}-{{/category}}</td>
                                <td>
                                    <a href="/admin/products/{{id}}" class="btn btn-primary" style="padding: 5px 10px; font-size: 12px;">Edit</a>
                                </td>
                            </tr>
                            {{/allProducts}}
                            {{^allProducts}}
                            <tr id="noProductsRow">
                                <td colspan="5" style="text-align: center; padding: 20px; color: #6c757d;">No products found</td>
                            </tr>
                            {{/allProducts}}
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
        
        <footer>
            <p>&copy; 2025 Alduino. All rights reserved.</p>
        </footer>
    </div>
    
    <script>
        const productId = '{{#product}}{{product.id}}{{/product}}';
        const isEdit = productId !== '';
        
        // Table filtering functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('tableSearch');
            const categoryFilter = document.getElementById('tableCategoryFilter');
            
            if (searchInput && categoryFilter) {
                searchInput.addEventListener('input', filterTable);
                categoryFilter.addEventListener('change', filterTable);
            }
        });
        
        function filterTable() {
            const searchInput = document.getElementById('tableSearch');
            const categoryFilter = document.getElementById('tableCategoryFilter');
            const tableBody = document.getElementById('productsTableBody');
            const noProductsRow = document.getElementById('noProductsRow');
            
            if (!searchInput || !categoryFilter || !tableBody) return;
            
            const searchTerm = searchInput.value.toLowerCase();
            const selectedCategory = categoryFilter.value;
            const rows = tableBody.querySelectorAll('tr');
            
            let visibleCount = 0;
            
            rows.forEach(row => {
                // Skip the "No products" row
                if (row.id === 'noProductsRow') {
                    return;
                }
                
                const name = row.getAttribute('data-name') || '';
                const id = row.getAttribute('data-id') || '';
                const category = row.getAttribute('data-category') || '';
                
                const matchesSearch = name.toLowerCase().includes(searchTerm) || 
                                    id.toLowerCase().includes(searchTerm);
                const matchesCategory = !selectedCategory || category === selectedCategory;
                
                if (matchesSearch && matchesCategory) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            // Show/hide "No products" message
            if (visibleCount === 0 && rows.length > 0) {
                if (!noProductsRow) {
                    const tr = document.createElement('tr');
                    tr.id = 'noProductsRow';
                    tr.innerHTML = '<td colspan="5" style="text-align: center; padding: 20px; color: #6c757d;">No products found matching filters</td>';
                    tableBody.appendChild(tr);
                } else {
                    noProductsRow.style.display = '';
                }
            } else if (noProductsRow) {
                noProductsRow.style.display = 'none';
            }
        }
        
        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                fetch('/api/products/' + id, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        alert('Product deleted successfully');
                        window.location.href = '/admin/products';
                    } else {
                        alert('Error deleting product');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting product');
                });
            }
        }
        
        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('name').value,
                description: document.getElementById('description').value,
                price: parseFloat(document.getElementById('price').value),
                currency: document.getElementById('currency').value,
                category: document.getElementById('category').value || null
            };
            
            // Only add ID if editing
            if (isEdit && productId) {
                formData.id = productId;
            }
            
            const url = isEdit ? '/api/products/' + productId : '/api/products';
            const method = isEdit ? 'PUT' : 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (response.ok) {
                    alert(isEdit ? 'Product updated successfully!' : 'Product created successfully!');
                    window.location.href = '/admin/products';
                } else {
                    return response.json().then(data => {
                        alert('Error: ' + (data.message || 'Failed to save product'));
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error saving product');
            });
        });
    </script>
</body>
</html>
